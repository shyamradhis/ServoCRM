package crm.domain;

import static crm.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class DealsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDealsAllPropertiesEquals(Deals expected, Deals actual) {
        assertDealsAutoGeneratedPropertiesEquals(expected, actual);
        assertDealsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDealsAllUpdatablePropertiesEquals(Deals expected, Deals actual) {
        assertDealsUpdatableFieldsEquals(expected, actual);
        assertDealsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDealsAutoGeneratedPropertiesEquals(Deals expected, Deals actual) {
        assertThat(expected)
            .as("Verify Deals auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDealsUpdatableFieldsEquals(Deals expected, Deals actual) {
        assertThat(expected)
            .as("Verify Deals relevant properties")
            .satisfies(e -> assertThat(e.getAmount()).as("check amount").isEqualTo(actual.getAmount()))
            .satisfies(e -> assertThat(e.getDeal_name()).as("check deal_name").isEqualTo(actual.getDeal_name()))
            .satisfies(
                e ->
                    assertThat(e.getClosing_date())
                        .as("check closing_date")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getClosing_date())
            )
            .satisfies(e -> assertThat(e.getAccount_name()).as("check account_name").isEqualTo(actual.getAccount_name()))
            .satisfies(e -> assertThat(e.getStage()).as("check stage").isEqualTo(actual.getStage()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDealsUpdatableRelationshipsEquals(Deals expected, Deals actual) {}
}
